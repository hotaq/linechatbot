const bodyParser = require('body-parser');
const dialogflow = require('dialogflow');
const { WebhookClient } = require('dialogflow-fulfillment');
const express = require('express');
const app = express().use(bodyParser.json());
const port = process.env.PORT || 3005
const axios = require('axios');

const apiUrl = 'http://127.0.0.1:8080';



app.post('/webhook',(request,response)=>{
    const _agent = new WebhookClient({  request: request, response: response});
    function Welcome(agent){
        agent.add(`‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏ú‡∏° LPBS ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏°‡∏≠‡∏á ‡∏û‡∏¥‡∏°‡∏û‡πå => information ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö `)
        agent.add(`Hello, I am LPBS. If you want to check for a stroke, type => information or check information. Respond with all numeric answers, please`)
    }
    
    function ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•(agent) {
        agent.add(`‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ?\n(gender ?)  \n------ \n1.‡∏ä‡∏≤‡∏¢ (male) \n2.‡∏´‡∏ç‡∏¥‡∏á (female) \n------ ` )
    }
    function ‡∏ï‡∏≠‡∏ö‡πÄ‡∏û‡∏®(agent){
        gender = agent.parameters.number;
        agent.context.set({
            name: 'gender',
            lifespan: 20,
            parameters: { gender: gender },
        });
        agent.add(`‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ?\n(Please enter your age.)`)

        
        
    }
    function ‡∏ï‡∏≠‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏(agent){
        age = agent.parameters.number
        const genderContext = _agent.context.get('gender');
        const gender = genderContext.parameters.gender;
         
        console.log(gender)
        agent.context.set({
            name: 'age',
            lifespan: 20,
            parameters: { age: age },
        });
        agent.add(`‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡πà‡∏≤‡∏ß ? \n(Do you have high blood pressure?) \n------ \n1.‡πÉ‡∏ä‡πà (yes) \n2.‡πÑ‡∏°‡πà (no) \n------`)
        
        

    }
    function ‡∏ï‡∏≠‡∏ö‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á(agent){
        hyper = agent.parameters.number;
        agent.context.set({
            name: 'hyper',
            lifespan: 20,
            parameters: { hyper: hyper },
        });
        agent.add(`‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ? \n(Have you ever had or do you suffer from heart disease ?) \n------ \n1.‡πÉ‡∏ä‡πà (yes)\n2.‡πÑ‡∏°‡πà (no) \n------`);
        
    }
    function ‡∏ï‡∏≠‡∏ö‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à(agent){
        heart = agent.parameters.number
        agent.context.set({
            name: 'heart',
            lifespan: 20,
            parameters: { heart: heart },
        });
        agent.add(`‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á \n(Have you ever been married or not?) \n------ \n1.‡πÄ‡∏Ñ‡∏¢ \n2.‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢ \n------`)
    }
    function ‡∏ï‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô(agent){
        marry = agent.parameters.number;
        agent.context.set({
            name: 'marry',
            lifespan: 20,
            parameters: { marry: marry },
        });
        agent.add(`‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô ?\n(What kind of work do you do?) \n------ \n0.‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏• (Govt_job)  \n1.‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (Private)  \n2.‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏≠‡∏¥‡∏™‡∏£‡∏∞ (Self-employed) \n3.‡πÄ‡∏î‡πá‡∏Å (children) \n------`)
    }
    function ‡∏ï‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô(agent){
        work = agent.parameters.number;
        agent.context.set({
            name: 'work',
            lifespan: 20,
            parameters: { work: work },
        });
        agent.add(`‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏ß‡πÄ‡∏ì‡πÉ‡∏î \n(Where do you live?) \n------ \n 1.‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á (in the city)  \n2.‡∏ô‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡∏≠‡∏á (countryside) \n------`)
    
    }
    function ‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢(agent){
        live = agent.parameters.number;
        agent.context.set({
            name: 'live',
            lifespan: 20,
            parameters: { live: live },
        });
        agent.add(`‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ? \n(Average blood sugar level in your blood ?)`)
        
    }
    function ‡∏ï‡∏≠‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î(agent){
        glucose = agent.parameters.number;
        agent.context.set({
            name: 'glucose',
            lifespan: 20,
            parameters: { glucose: glucose },
        });
        agent.add(`‡∏Ñ‡πà‡∏≤ BMI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ? \n (Your BMI value ?)`)
        
    }
    function ‡∏ï‡∏≠‡∏öBMI(agent){
        bmi = agent.parameters.number;
        agent.context.set({ 
            name: 'bmi',
            lifespan: 20,
            parameters: { bmi: bmi },
        });
        agent.add(`‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì \n (Your Smoking Behavior)   \n------ \n 1.‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà (Used to smoke cigarettes) \n 2.‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà (never smoked cigarettes) \n 3.‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà (smoke) \n------`)
        
    }
    function ‡∏ï‡∏≠‡∏ö‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà(agent){
        smoke = agent.parameters.number;
        const bmiContext = _agent.context.get('bmi')
        const bmi = bmiContext.parameters.bmi
        agent.context.set({
            name: 'smoke',
            lifespan: 20,
            parameters: { smoke: smoke },
        });
        agent.add(`‡∏û‡∏¥‡∏°‡∏û‡πå‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô \n (Type to confirm)`)
       
        
        return smoke
    }
    

    
    function ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•(agent){
        agent.add('ùôáùô§ùôñùôôùôûùô£ùôú...')
        
        
        agent.add(`‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí 20%`)
        agent.add(``)
        agent.add(`‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí 70%`)
        agent.add(``)
        agent.add(``)
        agent.add(`‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100%`)
        
        const genderContext = _agent.context.get('gender'); 
        const hyperContext = _agent.context.get('hyper');
        const ageContext = _agent.context.get('age');
        const smokeContext = _agent.context.get('smoke');
        const bmiContext = _agent.context.get('bmi');  
        const liveContext = _agent.context.get('live');
        const workContext = _agent.context.get('work');
        const glucoseContext = _agent.context.get('glucose');
        const marryContext = _agent.context.get('marry');
        
        const gender = genderContext.parameters.gender;
        const hyper = hyperContext.parameters.hyper;
        const age = ageContext.parameters.age;
        const bmi = bmiContext.parameters.bmi;  
        const live = liveContext.parameters.live;
        const work = workContext.parameters.work;
        const glucose = glucoseContext.parameters.glucose;
        const marry = marryContext.parameters.marry;
        const smoke = smokeContext.parameters.smoke;
        
        console.log(gender,age,hyper,marry,live,work,bmi,glucose,smoke)

        const originalData = {
            gender: 1,
            age: 1,
            hypertension: 1,
            heart_disease: 1,
            ever_married: 1,
            work_type: 1,
            Residence_type: 1,
            avg_glucose_level: 1,
            bmi: 1,
            smoking_status: 1
        };
        
        const convertedData = {
            "gender": originalData.gender,
            "age": originalData.age,
            "hypertension": originalData.hypertension,
            "heart_disease": originalData.heart_disease,
            "ever_married": originalData.ever_married,
            "work_type": originalData.work_type,
            "Residence_type": originalData.Residence_type || 1, 
            "avg_glucose_level": originalData.avg_glucose_level, 
            "bmi": originalData.bmi,
            "smoking_status": originalData.smoking_status
        };
        
        const apiUrl = 'http://127.0.0.1:8080/predict';
        
        axios.post(apiUrl, convertedData, {
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                console.log('Response:', response.data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        
        if( response.data== { 'prd is': 'stroke' }){
            agent.add('‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏°‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö \n (It seems that you may be at risk of having a cerebral vascular disease, sir.) ')
        }
        else{
            agent.add(`‡πÇ‡∏≠‡πâ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏°‡∏≠‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö \n (Oh, it seems like you are safe from a cerebral blood vessel disease) `)
        }
        
        







            


            
        
    }   


   


   
   
        
   
    
    
    
    let intents = new Map()
    intents.set("Default Welcome Intent",Welcome)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡πÄ‡∏û‡∏® ‡∏ñ‡∏≤‡∏°‡∏≠‡∏≤‡∏¢‡∏∏",‡∏ï‡∏≠‡∏ö‡πÄ‡∏û‡∏®)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏-‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á",‡∏ï‡∏≠‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á ‡∏ñ‡∏≤‡∏°‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à",‡∏ï‡∏≠‡∏ö‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏ñ‡∏≤‡∏°‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô",‡∏ï‡∏≠‡∏ö‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô ‡∏ñ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",‡∏ï‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢",‡∏ï‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ -‡∏ñ‡∏≤‡∏°‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î",‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î -‡∏ñ‡∏≤‡∏°BMI",‡∏ï‡∏≠‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏öBMI - ‡∏ñ‡∏≤‡∏°‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà",‡∏ï‡∏≠‡∏öBMI)
    intents.set("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡∏≠‡∏ö‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà - ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì",‡∏ï‡∏≠‡∏ö‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà)
    intents.set("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
    
    _agent.handleRequest(intents)
})

app.get('/',(req,res)=>{
    res.send('hello world')
})







app.listen(port,()=>{
    console.log('server runing on port :',port)
})